{"ast":null,"code":"import axios from \"axios\";\nimport { getCategoryAdverts, getSubcategoryAdverts } from \"../Actions/AdvertsActions\";\nconst SET_ADVERTS = 'SET_ADVERTS';\nconst SET_LOCATION = 'SET_LOCATION';\nlet initialState = {\n  adverts: [],\n  namePage: ''\n};\n\nconst advertsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ADVERTS:\n      let newAdvertList = [...state.adverts];\n      action.ads.map(ad => {\n        newAdvertList = [...newAdvertList, ad];\n      });\n      return { ...state,\n        adverts: newAdvertList\n      };\n\n    case SET_LOCATION:\n      return { ...state,\n        namePage: action.namePage\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAdverts = ads => ({\n  type: SET_ADVERTS,\n  ads\n});\n\nconst setNamePage = namePage => ({\n  type: SET_LOCATION,\n  namePage\n});\n\nexport const getAdverts = props => {\n  return dispatch => {\n    if (props.currentCategory.categoryUrl) {\n      dispatch(getCategoryAdverts({\n        currentCategory: props.currentCategory,\n        page: props.page\n      }));\n      dispatch(setNamePage(props.currentCategory.categoryName));\n    }\n\n    if (props.currentCategory.subcategoryUrl) {\n      dispatch(getSubcategoryAdverts({\n        currentCategory: props.currentCategory,\n        page: props.page\n      }));\n      dispatch(setNamePage(props.currentCategory.subcategories));\n    }\n\n    if (props.currentCategory.url) {\n      switch (props.currentCategory.url) {\n        case '/':\n          dispatch(getNewAds(props.page));\n          break;\n\n        case '/ad/search/':\n          dispatch(getSearchedAds({\n            search: props.search,\n            page: props.page\n          }));\n          break;\n\n        default:\n          return null;\n      }\n\n      dispatch(setNamePage(props.currentCategory.name));\n    }\n  };\n};\nexport default advertsReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/store/Reducers/AdvertsReducer.js"],"names":["axios","getCategoryAdverts","getSubcategoryAdverts","SET_ADVERTS","SET_LOCATION","initialState","adverts","namePage","advertsReducer","state","action","type","newAdvertList","ads","map","ad","setAdverts","setNamePage","getAdverts","props","dispatch","currentCategory","categoryUrl","page","categoryName","subcategoryUrl","subcategories","url","getNewAds","getSearchedAds","search","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,kBAAR,EAA4BC,qBAA5B,QAAwD,2BAAxD;AAEA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAAnB;;AAOA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAEvD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,WAAL;AACE,UAAIS,aAAa,GAAG,CAAC,GAAGH,KAAK,CAACH,OAAV,CAApB;AACAI,MAAAA,MAAM,CAACG,GAAP,CAAWC,GAAX,CAAeC,EAAE,IAAI;AACnBH,QAAAA,aAAa,GAAG,CAAC,GAAGA,aAAJ,EAAmBG,EAAnB,CAAhB;AACD,OAFD;AAIA,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,OAAO,EAAEM;AAFJ,OAAP;;AAMF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AAFZ,OAAP;;AAKF;AAAS,aAAOE,KAAP;AApBX;AAsBD,CAxBD;;AA0BA,OAAO,MAAMO,UAAU,GAAIH,GAAD,KAAU;AAACF,EAAAA,IAAI,EAAER,WAAP;AAAoBU,EAAAA;AAApB,CAAV,CAAnB;;AAEP,MAAMI,WAAW,GAAIV,QAAD,KAAe;AAAEI,EAAAA,IAAI,EAAEP,YAAR;AAAsBG,EAAAA;AAAtB,CAAf,CAApB;;AAEA,OAAO,MAAMW,UAAU,GAAIC,KAAD,IAAW;AAEnC,SAAQC,QAAD,IAAc;AAEnB,QAAID,KAAK,CAACE,eAAN,CAAsBC,WAA1B,EAAuC;AACrCF,MAAAA,QAAQ,CAACnB,kBAAkB,CAAC;AAACoB,QAAAA,eAAe,EAAEF,KAAK,CAACE,eAAxB;AAAyCE,QAAAA,IAAI,EAAEJ,KAAK,CAACI;AAArD,OAAD,CAAnB,CAAR;AACAH,MAAAA,QAAQ,CAACH,WAAW,CAACE,KAAK,CAACE,eAAN,CAAsBG,YAAvB,CAAZ,CAAR;AACD;;AAED,QAAIL,KAAK,CAACE,eAAN,CAAsBI,cAA1B,EAA0C;AACxCL,MAAAA,QAAQ,CAAClB,qBAAqB,CAAC;AAACmB,QAAAA,eAAe,EAAEF,KAAK,CAACE,eAAxB;AAAyCE,QAAAA,IAAI,EAAEJ,KAAK,CAACI;AAArD,OAAD,CAAtB,CAAR;AACAH,MAAAA,QAAQ,CAACH,WAAW,CAACE,KAAK,CAACE,eAAN,CAAsBK,aAAvB,CAAZ,CAAR;AACD;;AAED,QAAIP,KAAK,CAACE,eAAN,CAAsBM,GAA1B,EAA+B;AAC7B,cAAQR,KAAK,CAACE,eAAN,CAAsBM,GAA9B;AACE,aAAK,GAAL;AACEP,UAAAA,QAAQ,CAACQ,SAAS,CAACT,KAAK,CAACI,IAAP,CAAV,CAAR;AACA;;AAEF,aAAK,aAAL;AACEH,UAAAA,QAAQ,CAACS,cAAc,CAAC;AAACC,YAAAA,MAAM,EAAEX,KAAK,CAACW,MAAf;AAAuBP,YAAAA,IAAI,EAAEJ,KAAK,CAACI;AAAnC,WAAD,CAAf,CAAR;AACA;;AAEF;AAAS,iBAAO,IAAP;AATX;;AAWAH,MAAAA,QAAQ,CAACH,WAAW,CAACE,KAAK,CAACE,eAAN,CAAsBU,IAAvB,CAAZ,CAAR;AACD;AAEF,GA3BD;AA4BD,CA9BM;AAgCP,eAAevB,cAAf","sourcesContent":["import axios from \"axios\";\r\nimport {getCategoryAdverts, getSubcategoryAdverts} from \"../Actions/AdvertsActions\";\r\n\r\nconst SET_ADVERTS = 'SET_ADVERTS';\r\nconst SET_LOCATION = 'SET_LOCATION';\r\n\r\nlet initialState = {\r\n\r\n  adverts: [],\r\n  namePage: '',\r\n\r\n}\r\n\r\nconst advertsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case SET_ADVERTS:\r\n      let newAdvertList = [...state.adverts];\r\n      action.ads.map(ad => {\r\n        newAdvertList = [...newAdvertList, ad]\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        adverts: newAdvertList,\r\n      }\r\n\r\n\r\n    case SET_LOCATION:\r\n      return {\r\n        ...state,\r\n        namePage: action.namePage\r\n      }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const setAdverts = (ads) => ({type: SET_ADVERTS, ads});\r\n\r\nconst setNamePage = (namePage) => ({ type: SET_LOCATION, namePage });\r\n\r\nexport const getAdverts = (props) => {\r\n\r\n  return (dispatch) => {\r\n\r\n    if (props.currentCategory.categoryUrl) {\r\n      dispatch(getCategoryAdverts({currentCategory: props.currentCategory, page: props.page}));\r\n      dispatch(setNamePage(props.currentCategory.categoryName));\r\n    }\r\n\r\n    if (props.currentCategory.subcategoryUrl) {\r\n      dispatch(getSubcategoryAdverts({currentCategory: props.currentCategory, page: props.page}));\r\n      dispatch(setNamePage(props.currentCategory.subcategories));\r\n    }\r\n\r\n    if (props.currentCategory.url) {\r\n      switch (props.currentCategory.url) {\r\n        case '/':\r\n          dispatch(getNewAds(props.page));\r\n          break;\r\n\r\n        case '/ad/search/':\r\n          dispatch(getSearchedAds({search: props.search, page: props.page}));\r\n          break;\r\n\r\n        default: return null;\r\n      }\r\n      dispatch(setNamePage(props.currentCategory.name));\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default advertsReducer;"]},"metadata":{},"sourceType":"module"}