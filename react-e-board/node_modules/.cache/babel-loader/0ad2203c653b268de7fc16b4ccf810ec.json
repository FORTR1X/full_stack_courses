{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FORTRIX\\\\Desktop\\\\react_project\\\\src\\\\Adverts\\\\Adverts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport s from './Adverts.module.css';\nimport { useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport mapAdListToAdJSX from \"../mapAdListToAdJSX\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Adverts = props => {\n  _s();\n\n  const location = useLocation();\n  const decodeSearch = decodeURI(location.search);\n  const search = decodeSearch.match(/\\$w+/);\n  console.log(search);\n  const [namePage, setNamePage] = useState('');\n  const [page, setPage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [itemList, setItemList] = useState([]);\n  useEffect(() => {\n    if (props.namePage == '') props.setNamePage(location);\n    if (props.namePage) setNamePage(props.namePage);\n  }, [props.namePage]);\n\n  const handleLoadMore = () => {\n    if (!isLoading) {\n      setIsLoading(true);\n      setHasMore(false);\n      props.getAdverts({\n        page,\n        location\n      });\n      setPage(page + 1);\n    }\n  };\n\n  useEffect(() => {\n    setHasMore(itemList.length !== props.adverts.length);\n    setItemList(mapAdListToAdJSX(props.adverts));\n    setInterval(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, [props.adverts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.headerName,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: s.h4,\n        children: namePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: handleLoadMore,\n      hasMore: hasMore,\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.loader,\n        children: \"Loading ...\"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.adverts,\n        children: itemList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Adverts, \"f1sIoFRRslRZcQKaWRy7Rdwl7CY=\", false, function () {\n  return [useLocation];\n});\n\n_c = Adverts;\nexport default Adverts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adverts\");","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/Adverts/Adverts.js"],"names":["React","useEffect","useState","s","useLocation","InfiniteScroll","mapAdListToAdJSX","Adverts","props","location","decodeSearch","decodeURI","search","match","console","log","namePage","setNamePage","page","setPage","isLoading","setIsLoading","hasMore","setHasMore","itemList","setItemList","handleLoadMore","getAdverts","length","adverts","setInterval","content","headerName","h4","loader"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport s from './Adverts.module.css';\r\n\r\nimport {useLocation} from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport mapAdListToAdJSX from \"../mapAdListToAdJSX\";\r\n\r\nconst Adverts = (props) => {\r\n\r\n  const location = useLocation();\r\n  const decodeSearch = decodeURI(location.search);\r\n  const search = decodeSearch.match(/\\$w+/)\r\n\r\n  console.log(search);\r\n\r\n  const [namePage, setNamePage] = useState('');\r\n  const [page, setPage] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [itemList, setItemList] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    if (props.namePage == '')\r\n      props.setNamePage(location);\r\n\r\n    if (props.namePage)\r\n      setNamePage(props.namePage);\r\n\r\n  }, [props.namePage]);\r\n\r\n  const handleLoadMore = () => {\r\n    if (!isLoading) {\r\n      setIsLoading(true);\r\n      setHasMore(false);\r\n\r\n      props.getAdverts({page, location});\r\n      setPage(page + 1);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setHasMore(itemList.length !== props.adverts.length);\r\n    setItemList(mapAdListToAdJSX(props.adverts));\r\n    setInterval(() => {\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [props.adverts]);\r\n\r\n  return (\r\n      <div className={s.content}>\r\n        <div className={s.headerName}>\r\n          <h4 className={s.h4}>{namePage}</h4>\r\n        </div>\r\n        <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleLoadMore}\r\n            hasMore={hasMore}\r\n            loader={<div className={s.loader} key={0}>Loading ...</div>}>\r\n            <div className={s.adverts}>\r\n              {itemList}\r\n            </div>\r\n        </InfiniteScroll>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Adverts;"]},"metadata":{},"sourceType":"module"}