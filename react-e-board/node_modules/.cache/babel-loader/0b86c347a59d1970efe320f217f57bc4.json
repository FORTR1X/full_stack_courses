{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useLocalStorage = (initialState, key) => {\n  _s();\n\n  const getItem = () => {\n    const item = localStorage.getItem(key);\n    if (item) return item;\n    return initialState;\n  };\n\n  const [storedItem, setStoredItem] = useState(getItem());\n  /*\r\n    const setItem = (value) => {\r\n      localStorage.setItem(key, value);\r\n      setStoredItem(value);\r\n    }\r\n  */\n\n  useEffect(() => {\n    localStorage.setItem(key, storedItem);\n  }, [storedItem]);\n\n  const removeItem = () => {\n    localStorage.removeItem(key);\n    setStoredItem(null);\n  };\n\n  return [storedItem, setStoredItem, removeItem];\n};\n\n_s(useLocalStorage, \"S7mJ9TPFY4HTDRrTdpKTaKJ3arI=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","useLocalStorage","initialState","key","getItem","item","localStorage","storedItem","setStoredItem","setItem","removeItem"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAeC,GAAf,KAAuB;AAAA;;AAE7C,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAGC,YAAY,CAACF,OAAb,CAAqBD,GAArB,CAAb;AAEA,QAAIE,IAAJ,EACE,OAAOA,IAAP;AAEF,WAAOH,YAAP;AACD,GAPD;;AASA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACI,OAAO,EAAR,CAA5C;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEEL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,CAACG,OAAb,CAAqBN,GAArB,EAA0BI,UAA1B;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMG,UAAU,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAACI,UAAb,CAAwBP,GAAxB;AACAK,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,SAAO,CAACD,UAAD,EAAaC,aAAb,EAA4BE,UAA5B,CAAP;AACD,CA9BD;;GAAMT,e;;AAgCN,eAAeA,eAAf","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst useLocalStorage = (initialState, key) => {\r\n\r\n  const getItem = () => {\r\n    const item = localStorage.getItem(key);\r\n\r\n    if (item)\r\n      return item;\r\n\r\n    return initialState;\r\n  };\r\n\r\n  const [storedItem, setStoredItem] = useState(getItem());\r\n\r\n/*\r\n  const setItem = (value) => {\r\n    localStorage.setItem(key, value);\r\n    setStoredItem(value);\r\n  }\r\n*/\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, storedItem);\r\n  }, [storedItem]);\r\n\r\n  const removeItem = () => {\r\n    localStorage.removeItem(key);\r\n    setStoredItem(null);\r\n  }\r\n\r\n  return [storedItem, setStoredItem, removeItem];\r\n}\r\n\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}