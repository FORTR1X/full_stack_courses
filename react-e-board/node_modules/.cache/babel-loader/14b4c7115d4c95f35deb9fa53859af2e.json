{"ast":null,"code":"import axios from \"axios\";\nexport const MAIN_PAGE = {\n  url: '/',\n  name: 'Новые объявления'\n};\nexport const AD_SEARCH = {\n  url: '/ad/search/',\n  name: 'Поиск по объявлениям'\n};\nconst SET_TRANSPORT = 'SET_TRANSPORT';\nconst SET_IMMOVABLES = 'SET_IMMOVABLES';\nconst SET_HOUSEHOLD = 'SET_HOUSEHOLD';\nconst SET_APPARTAMENTS = 'SET_APPARTAMENTS';\nconst SET_HOUSES = 'SET_HOUSES';\nconst SET_CARS = 'SET_CARS';\nconst SET_MOTO = 'SET_MOTO';\nconst SET_APPLIANCE = 'SET_APPLIANCE';\nconst SET_FURNITURE = 'SET_FURNITURE';\nconst CHECK_CONTENT = 'CHECK_CONTENT';\nconst CURRENT_CATEGORY = 'CURRENT_CATEGORY';\nlet initialState = {\n  mainPage: {\n    url: '/',\n    name: 'Новые объявления'\n  },\n  adSearch: {\n    url: '/ad/search/',\n    name: 'Поиск по объявлениям'\n  },\n  transport: null,\n  immovables: null,\n  household: null,\n  appartaments: null,\n  houses: null,\n  cars: null,\n  moto: null,\n  appliance: null,\n  furniture: null,\n  isContentLoaded: false,\n  currentCategory: null\n};\n\nconst urlReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CURRENT_CATEGORY:\n      switch (action.location) {\n        case '/':\n        case '':\n          debugger;\n          return { ...state,\n            currentCategory: MAIN_PAGE\n          };\n\n        case '/ad/search/':\n          return { ...state,\n            currentCategory: AD_SEARCH\n          };\n\n        case state.transport.categoryUrl:\n          return { ...state,\n            currentCategory: state.transport\n          };\n\n        case state.immovables.categoryUrl:\n          return { ...state,\n            currentCategory: state.immovables\n          };\n\n        case state.household.categoryUrl:\n          return { ...state,\n            currentCategory: state.household\n          };\n\n        case state.appartaments.subcategoryUrl:\n          return { ...state,\n            currentCategory: state.appartaments\n          };\n\n        case state.houses.subcategoryUrl:\n          return { ...state,\n            currentCategory: state.houses\n          };\n\n        case state.cars.subcategoryUrl:\n          return { ...state,\n            currentCategory: state.cars\n          };\n\n        case state.moto.subcategoryUrl:\n          return { ...state,\n            currentCategory: state.moto\n          };\n\n        case state.appliance.subcategoryUrl:\n          return { ...state,\n            currentCategory: state.appliance\n          };\n\n        case state.furniture.subcategoryUrl:\n          return { ...state,\n            currentCategory: state.furniture\n          };\n\n        default:\n          return null;\n      }\n\n    case SET_TRANSPORT:\n      return { ...state,\n        transport: action.data\n      };\n\n    case SET_IMMOVABLES:\n      return { ...state,\n        immovables: action.data\n      };\n\n    case SET_HOUSEHOLD:\n      return { ...state,\n        household: action.data\n      };\n\n    case SET_APPARTAMENTS:\n      return { ...state,\n        appartaments: action.data\n      };\n\n    case SET_HOUSES:\n      return { ...state,\n        houses: action.data\n      };\n\n    case SET_CARS:\n      return { ...state,\n        cars: action.data\n      };\n\n    case SET_MOTO:\n      return { ...state,\n        moto: action.data\n      };\n\n    case SET_APPLIANCE:\n      return { ...state,\n        appliance: action.data\n      };\n\n    case SET_FURNITURE:\n      return { ...state,\n        furniture: action.data\n      };\n\n    case CHECK_CONTENT:\n      return { ...state,\n        isContentLoaded: !(state.transport == null || state.immovables == null || state.household == null || state.appartaments == null || state.houses == null || state.cars == null || state.moto == null || state.appliance == null || state.furniture == null)\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setTransport = data => ({\n  type: SET_TRANSPORT,\n  data\n});\n\nconst setImmovables = data => ({\n  type: SET_IMMOVABLES,\n  data\n});\n\nconst setHousehold = data => ({\n  type: SET_HOUSEHOLD,\n  data\n});\n\nconst setAppartaments = data => ({\n  type: SET_APPARTAMENTS,\n  data\n});\n\nconst setHouses = data => ({\n  type: SET_HOUSES,\n  data\n});\n\nconst setCars = data => ({\n  type: SET_CARS,\n  data\n});\n\nconst setMoto = data => ({\n  type: SET_MOTO,\n  data\n});\n\nconst setAppliance = data => ({\n  type: SET_APPLIANCE,\n  data\n});\n\nconst setFurniture = data => ({\n  type: SET_FURNITURE,\n  data\n});\n\nconst isContentLoaded = () => ({\n  type: CHECK_CONTENT\n});\n\nexport const getCurrentCategory = location => ({\n  type: CURRENT_CATEGORY,\n  location\n});\nexport const getSubcategories = () => {\n  return dispatch => {\n    axios.get('/subcategory/').then(response => {\n      dispatch(setHouses(response.data[0]));\n      dispatch(setAppartaments(response.data[1]));\n      dispatch(setCars(response.data[2]));\n      dispatch(setMoto(response.data[3]));\n      dispatch(setAppliance(response.data[4]));\n      dispatch(setFurniture(response.data[5]));\n      dispatch(isContentLoaded());\n    });\n  };\n};\nexport const getCategories = () => {\n  return dispatch => {\n    axios.get('/category/').then(response => {\n      dispatch(setTransport(response.data[0]));\n      dispatch(setHousehold(response.data[1]));\n      dispatch(setImmovables(response.data[2]));\n      dispatch(isContentLoaded());\n    });\n  };\n};\nexport default urlReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/redux/UrlReducer.js"],"names":["axios","MAIN_PAGE","url","name","AD_SEARCH","SET_TRANSPORT","SET_IMMOVABLES","SET_HOUSEHOLD","SET_APPARTAMENTS","SET_HOUSES","SET_CARS","SET_MOTO","SET_APPLIANCE","SET_FURNITURE","CHECK_CONTENT","CURRENT_CATEGORY","initialState","mainPage","adSearch","transport","immovables","household","appartaments","houses","cars","moto","appliance","furniture","isContentLoaded","currentCategory","urlReducer","state","action","type","location","categoryUrl","subcategoryUrl","data","setTransport","setImmovables","setHousehold","setAppartaments","setHouses","setCars","setMoto","setAppliance","setFurniture","getCurrentCategory","getSubcategories","dispatch","get","then","response","getCategories"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const MAIN_PAGE = {url: '/', name: 'Новые объявления'};\r\nexport const AD_SEARCH = {url: '/ad/search/', name: 'Поиск по объявлениям'}\r\n\r\nconst SET_TRANSPORT = 'SET_TRANSPORT';\r\nconst SET_IMMOVABLES = 'SET_IMMOVABLES';\r\nconst SET_HOUSEHOLD = 'SET_HOUSEHOLD';\r\n\r\nconst SET_APPARTAMENTS = 'SET_APPARTAMENTS';\r\nconst SET_HOUSES = 'SET_HOUSES';\r\n\r\nconst SET_CARS = 'SET_CARS';\r\nconst SET_MOTO = 'SET_MOTO';\r\n\r\nconst SET_APPLIANCE = 'SET_APPLIANCE';\r\nconst SET_FURNITURE = 'SET_FURNITURE';\r\n\r\nconst CHECK_CONTENT = 'CHECK_CONTENT';\r\n\r\nconst CURRENT_CATEGORY = 'CURRENT_CATEGORY';\r\n\r\nlet initialState = {\r\n\r\n  mainPage: {url: '/', name: 'Новые объявления'},\r\n  adSearch: {url: '/ad/search/', name: 'Поиск по объявлениям'},\r\n\r\n  transport: null,\r\n  immovables: null,\r\n  household: null,\r\n\r\n  appartaments: null,\r\n  houses: null,\r\n\r\n  cars: null,\r\n  moto: null,\r\n\r\n  appliance: null,\r\n  furniture: null,\r\n\r\n  isContentLoaded: false,\r\n\r\n  currentCategory: null,\r\n}\r\n\r\nconst urlReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case CURRENT_CATEGORY:\r\n      switch (action.location) {\r\n\r\n\r\n        case '/': case '':\r\n          debugger;\r\n          return {...state, currentCategory: MAIN_PAGE}\r\n\r\n        case '/ad/search/':\r\n          return {...state, currentCategory: AD_SEARCH}\r\n\r\n        case state.transport.categoryUrl:\r\n          return {...state, currentCategory: state.transport}\r\n\r\n        case state.immovables.categoryUrl:\r\n          return {...state, currentCategory: state.immovables}\r\n\r\n        case state.household.categoryUrl:\r\n          return {...state, currentCategory: state.household}\r\n\r\n        case state.appartaments.subcategoryUrl:\r\n          return {...state, currentCategory: state.appartaments}\r\n\r\n        case state.houses.subcategoryUrl:\r\n          return {...state, currentCategory: state.houses}\r\n\r\n        case state.cars.subcategoryUrl:\r\n          return {...state, currentCategory: state.cars}\r\n\r\n        case state.moto.subcategoryUrl:\r\n          return {...state, currentCategory: state.moto}\r\n\r\n        case state.appliance.subcategoryUrl:\r\n          return {...state, currentCategory: state.appliance}\r\n\r\n        case state.furniture.subcategoryUrl:\r\n          return {...state, currentCategory: state.furniture}\r\n\r\n        default: return null;\r\n      }\r\n\r\n    case SET_TRANSPORT:\r\n      return {\r\n        ...state,\r\n        transport: action.data\r\n      }\r\n\r\n    case SET_IMMOVABLES:\r\n      return {\r\n        ...state,\r\n        immovables: action.data\r\n      }\r\n\r\n    case SET_HOUSEHOLD:\r\n      return {\r\n        ...state,\r\n        household: action.data\r\n      }\r\n\r\n    case SET_APPARTAMENTS:\r\n      return {\r\n        ...state,\r\n        appartaments: action.data\r\n      }\r\n\r\n    case SET_HOUSES:\r\n      return {\r\n        ...state,\r\n        houses: action.data\r\n      }\r\n\r\n    case SET_CARS:\r\n      return {\r\n        ...state,\r\n        cars: action.data\r\n      }\r\n\r\n    case SET_MOTO:\r\n      return {\r\n        ...state,\r\n        moto: action.data\r\n      }\r\n\r\n    case SET_APPLIANCE:\r\n      return {\r\n        ...state,\r\n        appliance: action.data\r\n      }\r\n\r\n    case SET_FURNITURE:\r\n      return {\r\n        ...state,\r\n        furniture: action.data\r\n      }\r\n\r\n    case CHECK_CONTENT:\r\n      return {\r\n        ...state,\r\n        isContentLoaded: !(state.transport == null || state.immovables == null || state.household == null ||\r\n            state.appartaments == null || state.houses == null || state.cars == null || state.moto == null ||\r\n            state.appliance == null || state.furniture == null)\r\n      }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nconst setTransport = (data) => ({ type: SET_TRANSPORT, data });\r\nconst setImmovables = (data) => ({ type: SET_IMMOVABLES, data });\r\nconst setHousehold = (data) => ({ type:SET_HOUSEHOLD, data });\r\n\r\nconst setAppartaments = (data) => ({ type: SET_APPARTAMENTS, data });\r\nconst setHouses = (data) => ({ type: SET_HOUSES, data });\r\n\r\nconst setCars = (data) => ({ type: SET_CARS, data });\r\nconst setMoto = (data) => ({ type: SET_MOTO, data });\r\n\r\nconst setAppliance = (data) => ({ type: SET_APPLIANCE, data });\r\nconst setFurniture = (data) => ({ type: SET_FURNITURE, data });\r\n\r\nconst isContentLoaded = () => ({ type: CHECK_CONTENT });\r\n\r\nexport const getCurrentCategory = (location) => ({ type: CURRENT_CATEGORY, location });\r\n\r\nexport const getSubcategories = () => {\r\n  return (dispatch) => {\r\n    axios.get('/subcategory/').then(\r\n        response => {\r\n          dispatch(setHouses(response.data[0]));\r\n          dispatch(setAppartaments(response.data[1]));\r\n\r\n          dispatch(setCars(response.data[2]));\r\n          dispatch(setMoto(response.data[3]));\r\n\r\n          dispatch(setAppliance(response.data[4]));\r\n          dispatch(setFurniture(response.data[5]));\r\n          dispatch(isContentLoaded());\r\n        }\r\n    )\r\n  }\r\n}\r\n\r\nexport const getCategories = () => {\r\n  return (dispatch) => {\r\n    axios.get('/category/').then(\r\n        response => {\r\n          dispatch(setTransport(response.data[0]));\r\n          dispatch(setHousehold(response.data[1]));\r\n          dispatch(setImmovables(response.data[2]));\r\n          dispatch(isContentLoaded());\r\n        }\r\n    )\r\n  }\r\n}\r\n\r\nexport default urlReducer;"]},"metadata":{},"sourceType":"module"}