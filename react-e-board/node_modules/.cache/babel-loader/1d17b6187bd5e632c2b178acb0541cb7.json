{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FORTRIX\\\\Desktop\\\\react_project\\\\src\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport s from './Navbar.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport { BrowserRouter, Router, Routes, Route, Switch } from \"react-router-dom\";\nimport Login from \"../Authentication/Login/Login\";\nimport Registration from \"../Authentication/Registration/Registration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [request, setRequest] = useState('');\n\n  const handleSetRequest = value => {\n    setRequest(value);\n  };\n\n  const [toggleLogin, setToggleLogin] = useState(false);\n\n  const handleSetToggleLogin = () => {\n    setToggleLogin(!toggleLogin);\n  };\n\n  const [toggleRegistration, setToggleRegistration] = useState(false);\n\n  const handleSetToggleRegistration = () => {\n    setToggleRegistration(!toggleRegistration);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"navbar\", {\n    className: s.navbar,\n    children: [toggleLogin === true && /*#__PURE__*/_jsxDEV(Login, {\n      handleLog: handleSetToggleLogin,\n      handleReg: handleSetToggleRegistration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 36\n    }, this), toggleRegistration === true && /*#__PURE__*/_jsxDEV(Registration, {\n      handle: handleSetToggleRegistration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: s.logo,\n      to: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: s.logoLetterE,\n        children: \"e\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 48\n      }, this), \"-board\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: s.input,\n      type: \"text\",\n      placeholder: 'Поиск',\n      value: request,\n      onChange: event => handleSetRequest(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: s.btnLink,\n      to: `/ad/search/?=${request}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${s.btn} ${s.button}`,\n        children: \"\\u041F\\u043E\\u0438\\u0441\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 73\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      className: s.btnLink,\n      to: '/ad/create',\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${s.btn} ${s.button}`,\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${s.btn} ${s.buttonActive}`,\n      onClick: handleSetToggleLogin,\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"pfWkMSGgCagjjLM3Srp6LxThzw4=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/Navbar/Navbar.js"],"names":["React","useState","s","NavLink","BrowserRouter","Router","Routes","Route","Switch","Login","Registration","Navbar","request","setRequest","handleSetRequest","value","toggleLogin","setToggleLogin","handleSetToggleLogin","toggleRegistration","setToggleRegistration","handleSetToggleRegistration","navbar","logo","logoLetterE","input","event","target","btnLink","btn","button","buttonActive"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {BrowserRouter, Router, Routes, Route, Switch} from \"react-router-dom\";\r\nimport Login from \"../Authentication/Login/Login\";\r\nimport Registration from \"../Authentication/Registration/Registration\";\r\n\r\nconst Navbar = () => {\r\n  const [request, setRequest] = useState('');\r\n  const handleSetRequest = (value) => {\r\n    setRequest(value);\r\n  }\r\n\r\n  const [toggleLogin, setToggleLogin] = useState(false);\r\n  const handleSetToggleLogin = () => {\r\n    setToggleLogin(!toggleLogin);\r\n  }\r\n\r\n  const [toggleRegistration, setToggleRegistration] = useState(false);\r\n  const handleSetToggleRegistration = () => {\r\n    setToggleRegistration(!toggleRegistration);\r\n  }\r\n\r\n\r\n  return (\r\n        <navbar className={s.navbar}>\r\n          {toggleLogin === true && <Login handleLog={handleSetToggleLogin} handleReg={handleSetToggleRegistration}/>}\r\n          {toggleRegistration === true && <Registration handle={handleSetToggleRegistration}/>}\r\n          <NavLink className={s.logo} to={\"/\"}><span className={s.logoLetterE}>e</span>-board</NavLink>\r\n          <input className={s.input} type=\"text\" placeholder={'Поиск'} value={request} onChange={event => handleSetRequest(event.target.value)}/>\r\n          <NavLink className={s.btnLink} to={`/ad/search/?=${request}`}><button className={`${s.btn} ${s.button}`}>Поиск</button></NavLink>\r\n          <NavLink className={s.btnLink} to={'/ad/create'}><button className={`${s.btn} ${s.button}`}>Разместить объявление</button></NavLink>\r\n          <button className={`${s.btn} ${s.buttonActive}`} onClick={handleSetToggleLogin}>Войти</button>\r\n        </navbar>\r\n  );\r\n};\r\n\r\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}