{"ast":null,"code":"import axios from \"axios\";\nimport { setAuth, setIsAuth, setLogout, setUser } from \"../Reducers/LoginReducer\";\nexport const checkIsAuth = token => {\n  return dispatch => {\n    axios.post(`http://localhost:8080/oauth/check_token?token=${token}`).then(dispatch(setIsAuth(true))).catch(() => {\n      dispatch(setLogout());\n      localStorage.clear();\n    });\n  };\n};\nexport const getAuth = props => {\n  return dispatch => {\n    axios.post('http://localhost:8080/oauth/token', `grant_type=password&scope=ad&username=${props.login}&password=${props.password}&client_id=ad-client&client_secret=zxc`, {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      }\n    }).then(response => {\n      dispatch(setAuth(response.data));\n    });\n  };\n};\nexport const getUser = props => {\n  return dispatch => {\n    axios.get(`http://localhost:8080/user/${props.login}`, {\n      headers: {\n        'Authorization': `bearer ${props.token}`\n      }\n    }).then(response => {\n      dispatch(setUser(response.data));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/store/Actions/LoginActions.js"],"names":["axios","setAuth","setIsAuth","setLogout","setUser","checkIsAuth","token","dispatch","post","then","catch","localStorage","clear","getAuth","props","login","password","headers","response","data","getUser","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,OAAvC,QAAqD,0BAArD;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AACpC,SAAQC,QAAD,IAAc;AACnBP,IAAAA,KAAK,CAACQ,IAAN,CAAY,iDAAgDF,KAAM,EAAlE,EAAqEG,IAArE,CACIF,QAAQ,CAACL,SAAS,CAAC,IAAD,CAAV,CADZ,EAEEQ,KAFF,CAGI,MAAM;AACJH,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACAQ,MAAAA,YAAY,CAACC,KAAb;AACD,KANL;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAChC,SAAQP,QAAD,IAAc;AACnBP,IAAAA,KAAK,CAACQ,IAAN,CAAW,mCAAX,EAAiD,yCAAwCM,KAAK,CAACC,KAAM,aAAYD,KAAK,CAACE,QAAS,wCAAhI,EAAyK;AACvKC,MAAAA,OAAO,EAAE;AACP,uCAA+B;AADxB;AAD8J,KAAzK,EAIGR,IAJH,CAKIS,QAAQ,IAAI;AACVX,MAAAA,QAAQ,CAACN,OAAO,CAACiB,QAAQ,CAACC,IAAV,CAAR,CAAR;AACD,KAPL;AASD,GAVD;AAWD,CAZM;AAcP,OAAO,MAAMC,OAAO,GAAIN,KAAD,IAAW;AAChC,SAAQP,QAAD,IAAc;AACnBP,IAAAA,KAAK,CAACqB,GAAN,CAAW,8BAA6BP,KAAK,CAACC,KAAM,EAApD,EAAuD;AACrDE,MAAAA,OAAO,EAAE;AACP,yBAAkB,UAASH,KAAK,CAACR,KAAM;AADhC;AAD4C,KAAvD,EAIGG,IAJH,CAKIS,QAAQ,IAAI;AACVX,MAAAA,QAAQ,CAACH,OAAO,CAACc,QAAQ,CAACC,IAAV,CAAR,CAAR;AACD,KAPL;AASD,GAVD;AAWD,CAZM","sourcesContent":["import axios from \"axios\";\r\nimport {setAuth, setIsAuth, setLogout, setUser} from \"../Reducers/LoginReducer\";\r\n\r\nexport const checkIsAuth = (token) => {\r\n  return (dispatch) => {\r\n    axios.post(`http://localhost:8080/oauth/check_token?token=${token}`).then(\r\n        dispatch(setIsAuth(true))\r\n    ).catch(\r\n        () => {\r\n          dispatch(setLogout());\r\n          localStorage.clear();\r\n        }\r\n    )\r\n  }\r\n}\r\n\r\nexport const getAuth = (props) => {\r\n  return (dispatch) => {\r\n    axios.post('http://localhost:8080/oauth/token', `grant_type=password&scope=ad&username=${props.login}&password=${props.password}&client_id=ad-client&client_secret=zxc`, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n      }\r\n    }).then(\r\n        response => {\r\n          dispatch(setAuth(response.data));\r\n        }\r\n    );\r\n  }\r\n}\r\n\r\nexport const getUser = (props) => {\r\n  return (dispatch) => {\r\n    axios.get(`http://localhost:8080/user/${props.login}`, {\r\n      headers: {\r\n        'Authorization': `bearer ${props.token}`\r\n      }\r\n    }).then(\r\n        response => {\r\n          dispatch(setUser(response.data))\r\n        }\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}