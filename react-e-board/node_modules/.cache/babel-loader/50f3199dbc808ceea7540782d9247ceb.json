{"ast":null,"code":"import axios from \"axios\";\nconst SET_OAUTH_USER = 'SET_OAUTH_USER';\nconst SET_OAUTH_DATA = 'SET_OAUTH_DATA';\nlet initalState = {\n  user: null,\n  accessToken: null,\n  expiresIn: null,\n  userId: null\n};\n\nconst OAuthReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_OAUTH_USER:\n      return { ...state,\n        user: action.user\n      };\n\n    case SET_OAUTH_DATA:\n      const dataToken = action.location.match(/\\w+=\\w+/mg);\n\n      if (dataToken) {\n        const accessToken = dataToken[0].match(/=\\w+/)[0].slice(1);\n        const expiresIn = dataToken[1].match(/=\\w+/)[0].slice(1);\n        const userId = dataToken[2].match(/=\\w+/)[0].slice(1);\n        if (accessToken) return { ...state,\n          accessToken: accessToken,\n          expiresIn: expiresIn,\n          userId: userId\n        };\n      }\n\n      break;\n\n    default:\n      return state;\n  }\n};\n\n_c = OAuthReducer;\nexport const setOAuthUser = user => ({\n  type: SET_OAUTH_USER,\n  user\n});\nexport const getOAuthData = location => ({\n  type: SET_OAUTH_DATA,\n  location\n});\nexport default OAuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OAuthReducer\");","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/store/Reducers/OAuthReducer.js"],"names":["axios","SET_OAUTH_USER","SET_OAUTH_DATA","initalState","user","accessToken","expiresIn","userId","OAuthReducer","state","action","type","dataToken","location","match","slice","setOAuthUser","getOAuthData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,IADU;AAGhBC,EAAAA,WAAW,EAAE,IAHG;AAIhBC,EAAAA,SAAS,EAAE,IAJK;AAKhBC,EAAAA,MAAM,EAAE;AALQ,CAAlB;;AAQA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBN,WAAwB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKV,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACN;AAFR,OAAP;;AAKF,SAAKF,cAAL;AACE,YAAMU,SAAS,GAAGF,MAAM,CAACG,QAAP,CAAgBC,KAAhB,CAAsB,WAAtB,CAAlB;;AACA,UAAIF,SAAJ,EAAe;AACb,cAAMP,WAAW,GAAGO,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,CAAmB,MAAnB,EAA2B,CAA3B,EAA8BC,KAA9B,CAAoC,CAApC,CAApB;AACA,cAAMT,SAAS,GAAGM,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,CAAmB,MAAnB,EAA2B,CAA3B,EAA8BC,KAA9B,CAAoC,CAApC,CAAlB;AACA,cAAMR,MAAM,GAAGK,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,CAAmB,MAAnB,EAA2B,CAA3B,EAA8BC,KAA9B,CAAoC,CAApC,CAAf;AACA,YAAIV,WAAJ,EACE,OAAO,EACL,GAAGI,KADE;AAELJ,UAAAA,WAAW,EAAEA,WAFR;AAGLC,UAAAA,SAAS,EAAEA,SAHN;AAILC,UAAAA,MAAM,EAAEA;AAJH,SAAP;AAMH;;AACD;;AAEF;AAAS,aAAOE,KAAP;AAxBX;AA0BD,CA3BD;;KAAMD,Y;AA6BN,OAAO,MAAMQ,YAAY,GAAIZ,IAAD,KAAW;AAAEO,EAAAA,IAAI,EAAEV,cAAR;AAAwBG,EAAAA;AAAxB,CAAX,CAArB;AACP,OAAO,MAAMa,YAAY,GAAIJ,QAAD,KAAe;AAAEF,EAAAA,IAAI,EAAET,cAAR;AAAwBW,EAAAA;AAAxB,CAAf,CAArB;AAEP,eAAeL,YAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SET_OAUTH_USER = 'SET_OAUTH_USER';\r\nconst SET_OAUTH_DATA = 'SET_OAUTH_DATA';\r\n\r\nlet initalState = {\r\n  user: null,\r\n\r\n  accessToken: null,\r\n  expiresIn: null,\r\n  userId: null,\r\n}\r\n\r\nconst OAuthReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n\r\n    case SET_OAUTH_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n\r\n    case SET_OAUTH_DATA:\r\n      const dataToken = action.location.match(/\\w+=\\w+/mg);\r\n      if (dataToken) {\r\n        const accessToken = dataToken[0].match(/=\\w+/)[0].slice(1);\r\n        const expiresIn = dataToken[1].match(/=\\w+/)[0].slice(1);\r\n        const userId = dataToken[2].match(/=\\w+/)[0].slice(1);\r\n        if (accessToken)\r\n          return {\r\n            ...state,\r\n            accessToken: accessToken,\r\n            expiresIn: expiresIn,\r\n            userId: userId,\r\n          }\r\n      }\r\n      break;\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport const setOAuthUser = (user) => ({ type: SET_OAUTH_USER, user })\r\nexport const getOAuthData = (location) => ({ type: SET_OAUTH_DATA, location })\r\n\r\nexport default OAuthReducer;"]},"metadata":{},"sourceType":"module"}