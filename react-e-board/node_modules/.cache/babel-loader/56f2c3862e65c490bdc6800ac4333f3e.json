{"ast":null,"code":"import axios from \"axios\";\nconst CHANGE_LOGIN = 'CHANGE_LOGIN';\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nconst SET_AUTH = 'SET_AUTH';\nconst IS_AUTH = 'IS_AUTH';\nconst SET_USER = 'SET_USER';\nconst SET_LOGOUT = 'SET_LOGOUT';\nlet initialState = {\n  login: '',\n  password: '',\n  token: '',\n  refreshToken: '',\n  isAuth: false,\n  user: null\n};\n\nconst loginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_LOGIN:\n      return { ...state,\n        login: action.login\n      };\n\n    case CHANGE_PASSWORD:\n      return { ...state,\n        password: action.password\n      };\n\n    case SET_AUTH:\n      localStorage.setItem('token', action.data.access_token);\n      localStorage.setItem('refreshToken', action.data.refresh_token);\n      debugger;\n      return { ...state,\n        token: action.data.access_token,\n        refreshToken: action.data.refresh_token,\n        isAuth: true\n      };\n\n    case IS_AUTH:\n      return { ...state,\n        isAuth: action.isAuth\n      };\n\n    case SET_USER:\n      localStorage.setItem('username', action.data.username);\n      localStorage.setItem('id', action.data.id);\n      localStorage.setItem('avatar', action.data.avatar);\n      return { ...state,\n        user: action.data\n      };\n\n    case SET_LOGOUT:\n      localStorage.clear(); // вынести отдельное удаление в хук\n\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const changeLogin = login => ({\n  type: CHANGE_LOGIN,\n  login\n});\nexport const changePassword = password => ({\n  type: CHANGE_PASSWORD,\n  password\n});\nexport const setAuth = data => ({\n  type: SET_AUTH,\n  data\n});\nexport const setIsAuth = isAuth => ({\n  type: IS_AUTH,\n  isAuth\n});\nexport const setUser = data => ({\n  type: SET_USER,\n  data\n});\nexport const setLogout = () => ({\n  type: SET_LOGOUT\n});\nexport const checkIsAuth = token => {\n  return dispatch => {\n    axios.post(`http://localhost:8080/oauth/check_token?token=${token}`).then(dispatch(setIsAuth(true))).catch(dispatch(setLogout()));\n  };\n};\nexport const getAuth = props => {\n  return dispatch => {\n    axios.post('http://localhost:8080/oauth/token', `grant_type=password&scope=ad&username=${props.login}&password=${props.password}&client_id=ad-client&client_secret=zxc`, {\n      headers: {\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\n      }\n    }).then(response => {\n      dispatch(setAuth(response.data));\n    });\n  };\n};\nexport const getUser = props => {\n  return dispatch => {\n    axios.get(`http://localhost:8080/user/${props.login}`, {\n      headers: {\n        'Authorization': `bearer ${props.token}`\n      }\n    }).then(response => {\n      dispatch(setUser(response.data));\n    });\n  };\n};\nexport default loginReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/redux/LoginReducer.js"],"names":["axios","CHANGE_LOGIN","CHANGE_PASSWORD","SET_AUTH","IS_AUTH","SET_USER","SET_LOGOUT","initialState","login","password","token","refreshToken","isAuth","user","loginReducer","state","action","type","localStorage","setItem","data","access_token","refresh_token","username","id","avatar","clear","changeLogin","changePassword","setAuth","setIsAuth","setUser","setLogout","checkIsAuth","dispatch","post","then","catch","getAuth","props","headers","response","getUser","get"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst CHANGE_LOGIN = 'CHANGE_LOGIN';\r\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nconst SET_AUTH = 'SET_AUTH';\r\nconst IS_AUTH = 'IS_AUTH';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_LOGOUT = 'SET_LOGOUT';\r\n\r\nlet initialState = {\r\n  login: '',\r\n  password: '',\r\n  token: '',\r\n  refreshToken: '',\r\n  isAuth: false,\r\n  user: null\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case CHANGE_LOGIN:\r\n      return {\r\n        ...state,\r\n        login: action.login,\r\n      }\r\n\r\n    case CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password,\r\n      }\r\n\r\n    case SET_AUTH:\r\n      localStorage.setItem('token', action.data.access_token);\r\n      localStorage.setItem('refreshToken', action.data.refresh_token);\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        token: action.data.access_token,\r\n        refreshToken: action.data.refresh_token,\r\n        isAuth: true\r\n      }\r\n\r\n    case IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: action.isAuth\r\n      }\r\n\r\n    case SET_USER:\r\n      localStorage.setItem('username', action.data.username);\r\n      localStorage.setItem('id', action.data.id);\r\n      localStorage.setItem('avatar', action.data.avatar)\r\n      return {\r\n        ...state,\r\n        user: action.data\r\n      }\r\n\r\n    case SET_LOGOUT:\r\n      localStorage.clear();\r\n      // вынести отдельное удаление в хук\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const changeLogin = (login) => ({ type: CHANGE_LOGIN, login });\r\nexport const changePassword = (password) => ({ type: CHANGE_PASSWORD, password });\r\nexport const setAuth = (data) => ({type: SET_AUTH, data});\r\nexport const setIsAuth = (isAuth) => ({ type: IS_AUTH, isAuth })\r\nexport const setUser = (data) => ({ type: SET_USER, data })\r\nexport const setLogout = () => ({ type: SET_LOGOUT });\r\n\r\nexport const checkIsAuth = (token) => {\r\n  return (dispatch) => {\r\n    axios.post(`http://localhost:8080/oauth/check_token?token=${token}`).then(\r\n        dispatch(setIsAuth(true))\r\n    ).catch(\r\n        dispatch(setLogout())\r\n    )\r\n  }\r\n}\r\n\r\nexport const getAuth = (props) => {\r\n  return (dispatch) => {\r\n    axios.post('http://localhost:8080/oauth/token', `grant_type=password&scope=ad&username=${props.login}&password=${props.password}&client_id=ad-client&client_secret=zxc`, {\r\n      headers: {\r\n        'Access-Control-Allow-Origin': 'http://localhost:3000'\r\n      }\r\n    }).then(\r\n        response => {\r\n          dispatch(setAuth(response.data));\r\n        }\r\n    );\r\n  }\r\n}\r\n\r\nexport const getUser = (props) => {\r\n  return (dispatch) => {\r\n    axios.get(`http://localhost:8080/user/${props.login}`, {\r\n      headers: {\r\n        'Authorization': `bearer ${props.token}`\r\n      }\r\n    }).then(\r\n        response => {\r\n          dispatch(setUser(response.data))\r\n        }\r\n    )\r\n  }\r\n}\r\n\r\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}