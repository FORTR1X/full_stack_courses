{"ast":null,"code":"import axios from \"axios\";\nconst SET_OAUTH_USER = 'SET_OAUTH_USER';\nconst SET_OAUTH_DATA = 'SET_OAUTH_DATA';\nlet initalState = {};\n\nconst OAuthReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\n_c = OAuthReducer;\n\nconst setOAuthUser = user => ({\n  type: SET_OAUTH_USER,\n  user\n});\n\nexport const getOAuthData = location => ({\n  type: SET_OAUTH_DATA\n});\nexport const getOAuthUser = props => {\n  return dispatch => {\n    axios.get(`https://api.vk.com/method/users.get?user_ids=${props.userId}&access_token=${props.accessToken}&v=5.131`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n        'Access-Control-Allow-Credentials': 'true',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => dispatch(setOAuthUser(response.data)));\n  };\n};\nexport default OAuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"OAuthReducer\");","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/redux/OAuthReducer.js"],"names":["axios","SET_OAUTH_USER","SET_OAUTH_DATA","initalState","OAuthReducer","state","action","type","setOAuthUser","user","getOAuthData","location","getOAuthUser","props","dispatch","get","userId","accessToken","headers","then","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AAEA,IAAIC,WAAW,GAAG,EAAlB;;AAIA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBF,WAAwB;AAAA,MAAXG,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AAEE;AAAS,aAAOF,KAAP;AAFX;AAID,CALD;;KAAMD,Y;;AAON,MAAMI,YAAY,GAAIC,IAAD,KAAW;AAAEF,EAAAA,IAAI,EAAEN,cAAR;AAAwBQ,EAAAA;AAAxB,CAAX,CAArB;;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAD,KAAe;AAAEJ,EAAAA,IAAI,EAAEL;AAAR,CAAf,CAArB;AAEP,OAAO,MAAMU,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAQC,QAAD,IAAc;AACnBd,IAAAA,KAAK,CAACe,GAAN,CAAW,gDAA+CF,KAAK,CAACG,MAAO,iBAAgBH,KAAK,CAACI,WAAY,UAAzG,EAAoH;AAClHC,MAAAA,OAAO,EAAE;AACP,uCAA+B,GADxB;AAEP,wCAAgC,GAFzB;AAGP,wCAAgC,GAHzB;AAIP,4CAAoC,MAJ7B;AAKP,wBAAgB;AALT;AADyG,KAApH,EAQGC,IARH,CASIC,QAAQ,IAAIN,QAAQ,CAACN,YAAY,CAACY,QAAQ,CAACC,IAAV,CAAb,CATxB;AAWD,GAZD;AAaD,CAdM;AAgBP,eAAejB,YAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SET_OAUTH_USER = 'SET_OAUTH_USER';\r\nconst SET_OAUTH_DATA = 'SET_OAUTH_DATA';\r\n\r\nlet initalState = {\r\n\r\n}\r\n\r\nconst OAuthReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nconst setOAuthUser = (user) => ({ type: SET_OAUTH_USER, user })\r\nexport const getOAuthData = (location) => ({ type: SET_OAUTH_DATA })\r\n\r\nexport const getOAuthUser = (props) => {\r\n  return (dispatch) => {\r\n    axios.get(`https://api.vk.com/method/users.get?user_ids=${props.userId}&access_token=${props.accessToken}&v=5.131`, {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"*\",\r\n        'Access-Control-Allow-Credentials': 'true',\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).then(\r\n        response => dispatch(setOAuthUser(response.data))\r\n    )\r\n  }\r\n}\r\n\r\nexport default OAuthReducer;"]},"metadata":{},"sourceType":"module"}