{"ast":null,"code":"import axios from \"axios\";\nimport { getCategory, getCharacteristic, getOwner } from \"../Actions/ViewAdActions\";\nconst SET_ADVERT = 'SET_ADVERT';\nconst SET_CHARACTERISTIC = 'SET_CHARACTERISTIC';\nconst SET_CATEGORY = 'SET_CATEGORY';\nconst SET_OWNER = 'SET_OWNER';\nconst SET_SUBCATEGORY = 'SET_SUBCATEGORY';\nlet initialState = {\n  advert: {\n    photos: null\n  },\n  characteristic: {\n    id: -1,\n    name: 'неизвестно'\n  },\n  category: {\n    id: -1,\n    categoryName: 'неизвестно'\n  },\n  subcategory: {\n    id: -1,\n    subcategories: 'неизвестно'\n  },\n  owner: {\n    id: -1,\n    name: 'неизвестно',\n    avatar: null\n  }\n};\n\nconst viewAdReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ADVERT:\n      getCharacteristic(action.advert.adId);\n      getCategory(action.advert.subId);\n      getOwner(action.advert.owner);\n      return { ...state,\n        advert: action.advert\n      };\n\n    case SET_CHARACTERISTIC:\n      return { ...state,\n        characteristic: action.characteristics.characteristic\n      };\n\n    case SET_CATEGORY:\n      return { ...state,\n        category: action.category\n      };\n\n    case SET_OWNER:\n      return { ...state,\n        owner: action.owner\n      };\n\n    case SET_SUBCATEGORY:\n      return { ...state,\n        subcategory: action.subId\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAdvert = advert => ({\n  type: SET_ADVERT,\n  advert\n});\nexport const setCharacteristic = characteristics => ({\n  type: SET_CHARACTERISTIC,\n  characteristics\n});\nexport const setCategory = category => ({\n  type: SET_CATEGORY,\n  category\n});\nexport const setOwner = owner => ({\n  type: SET_OWNER,\n  owner\n});\nexport const setSubcategory = subId => ({\n  type: SET_SUBCATEGORY,\n  subId\n});\nexport default viewAdReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/store/Reducers/ViewAdReducer.js"],"names":["axios","getCategory","getCharacteristic","getOwner","SET_ADVERT","SET_CHARACTERISTIC","SET_CATEGORY","SET_OWNER","SET_SUBCATEGORY","initialState","advert","photos","characteristic","id","name","category","categoryName","subcategory","subcategories","owner","avatar","viewAdReducer","state","action","type","adId","subId","characteristics","setAdvert","setCharacteristic","setCategory","setOwner","setSubcategory"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,iBAArB,EAAwCC,QAAxC,QAAuD,0BAAvD;AAEA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE;AAACC,IAAAA,MAAM,EAAE;AAAT,GADS;AAEjBC,EAAAA,cAAc,EAAE;AAACC,IAAAA,EAAE,EAAE,CAAC,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFC;AAGjBC,EAAAA,QAAQ,EAAE;AAACF,IAAAA,EAAE,EAAE,CAAC,CAAN;AAASG,IAAAA,YAAY,EAAE;AAAvB,GAHO;AAIjBC,EAAAA,WAAW,EAAE;AAACJ,IAAAA,EAAE,EAAE,CAAC,CAAN;AAASK,IAAAA,aAAa,EAAE;AAAxB,GAJI;AAKjBC,EAAAA,KAAK,EAAE;AAACN,IAAAA,EAAE,EAAE,CAAC,CAAN;AAASC,IAAAA,IAAI,EAAE,YAAf;AAA6BM,IAAAA,MAAM,EAAE;AAArC;AALU,CAAnB;;AAQA,MAAMC,aAAa,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AAEtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKpB,UAAL;AACEF,MAAAA,iBAAiB,CAACqB,MAAM,CAACb,MAAP,CAAce,IAAf,CAAjB;AACAxB,MAAAA,WAAW,CAACsB,MAAM,CAACb,MAAP,CAAcgB,KAAf,CAAX;AACAvB,MAAAA,QAAQ,CAACoB,MAAM,CAACb,MAAP,CAAcS,KAAf,CAAR;AACA,aAAO,EACL,GAAGG,KADE;AAELZ,QAAAA,MAAM,EAAEa,MAAM,CAACb;AAFV,OAAP;;AAKF,SAAKL,kBAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELV,QAAAA,cAAc,EAAEW,MAAM,CAACI,eAAP,CAAuBf;AAFlC,OAAP;;AAKF,SAAKN,YAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELP,QAAAA,QAAQ,EAAEQ,MAAM,CAACR;AAFZ,OAAP;;AAKF,SAAKR,SAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFT,OAAP;;AAKF,SAAKX,eAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELL,QAAAA,WAAW,EAAEM,MAAM,CAACG;AAFf,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAnCJ;AAqCD,CAvCD;;AAyCA,OAAO,MAAMM,SAAS,GAAIlB,MAAD,KAAa;AAAEc,EAAAA,IAAI,EAAEpB,UAAR;AAAoBM,EAAAA;AAApB,CAAb,CAAlB;AACP,OAAO,MAAMmB,iBAAiB,GAAIF,eAAD,KAAsB;AAAEH,EAAAA,IAAI,EAAEnB,kBAAR;AAA4BsB,EAAAA;AAA5B,CAAtB,CAA1B;AACP,OAAO,MAAMG,WAAW,GAAIf,QAAD,KAAe;AAAES,EAAAA,IAAI,EAAElB,YAAR;AAAsBS,EAAAA;AAAtB,CAAf,CAApB;AACP,OAAO,MAAMgB,QAAQ,GAAIZ,KAAD,KAAY;AAAEK,EAAAA,IAAI,EAAEjB,SAAR;AAAmBY,EAAAA;AAAnB,CAAZ,CAAjB;AACP,OAAO,MAAMa,cAAc,GAAIN,KAAD,KAAY;AAAEF,EAAAA,IAAI,EAAEhB,eAAR;AAAyBkB,EAAAA;AAAzB,CAAZ,CAAvB;AAEP,eAAeL,aAAf","sourcesContent":["import axios from \"axios\";\r\nimport {getCategory, getCharacteristic, getOwner} from \"../Actions/ViewAdActions\";\r\n\r\nconst SET_ADVERT = 'SET_ADVERT';\r\nconst SET_CHARACTERISTIC = 'SET_CHARACTERISTIC';\r\nconst SET_CATEGORY = 'SET_CATEGORY';\r\nconst SET_OWNER = 'SET_OWNER';\r\nconst SET_SUBCATEGORY = 'SET_SUBCATEGORY';\r\n\r\nlet initialState = {\r\n  advert: {photos: null},\r\n  characteristic: {id: -1, name: 'неизвестно'},\r\n  category: {id: -1, categoryName: 'неизвестно'},\r\n  subcategory: {id: -1, subcategories: 'неизвестно'},\r\n  owner: {id: -1, name: 'неизвестно', avatar: null},\r\n}\r\n\r\nconst viewAdReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SET_ADVERT:\r\n      getCharacteristic(action.advert.adId);\r\n      getCategory(action.advert.subId);\r\n      getOwner(action.advert.owner);\r\n      return {\r\n        ...state,\r\n        advert: action.advert\r\n      }\r\n\r\n    case SET_CHARACTERISTIC:\r\n      return {\r\n        ...state,\r\n        characteristic: action.characteristics.characteristic\r\n      }\r\n\r\n    case SET_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: action.category\r\n      }\r\n\r\n    case SET_OWNER:\r\n      return {\r\n        ...state,\r\n        owner: action.owner\r\n      }\r\n\r\n    case SET_SUBCATEGORY:\r\n      return {\r\n        ...state,\r\n        subcategory: action.subId\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAdvert = (advert) => ({ type: SET_ADVERT, advert });\r\nexport const setCharacteristic = (characteristics) => ({ type: SET_CHARACTERISTIC, characteristics });\r\nexport const setCategory = (category) => ({ type: SET_CATEGORY, category });\r\nexport const setOwner = (owner) => ({ type: SET_OWNER, owner });\r\nexport const setSubcategory = (subId) => ({ type: SET_SUBCATEGORY, subId });\r\n\r\nexport default viewAdReducer;"]},"metadata":{},"sourceType":"module"}