{"ast":null,"code":"const CHANGE_LOGIN = 'CHANGE_LOGIN';\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nconst SET_AUTH = 'SET_AUTH';\nconst IS_AUTH = 'IS_AUTH';\nconst SET_USER = 'SET_USER';\nconst SET_LOGOUT = 'SET_LOGOUT';\nlet initialState = {\n  login: '',\n  password: '',\n  token: '',\n  refreshToken: '',\n  isAuth: false,\n  user: null\n};\n\nconst loginReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_LOGIN:\n      return { ...state,\n        login: action.login\n      };\n\n    case CHANGE_PASSWORD:\n      return { ...state,\n        password: action.password\n      };\n\n    case SET_AUTH:\n      return { ...state,\n        token: action.data.access_token,\n        refreshToken: action.data.refresh_token\n      };\n\n    case IS_AUTH:\n      return { ...state,\n        isAuth: action.isAuth\n      };\n\n    case SET_USER:\n      return { ...state,\n        user: action.data,\n        isAuth: true\n      };\n\n    case SET_LOGOUT:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const changeLogin = login => ({\n  type: CHANGE_LOGIN,\n  login\n});\nexport const changePassword = password => ({\n  type: CHANGE_PASSWORD,\n  password\n});\nexport const setAuth = data => ({\n  type: SET_AUTH,\n  data\n});\nexport const setIsAuth = isAuth => ({\n  type: IS_AUTH,\n  isAuth\n});\nexport const setUser = data => ({\n  type: SET_USER,\n  data\n});\nexport const setLogout = () => ({\n  type: SET_LOGOUT\n});\nexport default loginReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/store/Reducers/LoginReducer.js"],"names":["CHANGE_LOGIN","CHANGE_PASSWORD","SET_AUTH","IS_AUTH","SET_USER","SET_LOGOUT","initialState","login","password","token","refreshToken","isAuth","user","loginReducer","state","action","type","data","access_token","refresh_token","changeLogin","changePassword","setAuth","setIsAuth","setUser","setLogout"],"mappings":"AAAA,MAAMA,YAAY,GAAG,cAArB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,YAAY,EAAE,EAJG;AAKjBC,EAAAA,MAAM,EAAE,KALS;AAMjBC,EAAAA,IAAI,EAAE;AANW,CAAnB;;AASA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAErD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,YAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFT,OAAP;;AAKF,SAAKN,eAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELN,QAAAA,QAAQ,EAAEO,MAAM,CAACP;AAFZ,OAAP;;AAKF,SAAKN,QAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,KAAK,EAAEM,MAAM,CAACE,IAAP,CAAYC,YAFd;AAGLR,QAAAA,YAAY,EAAEK,MAAM,CAACE,IAAP,CAAYE;AAHrB,OAAP;;AAMF,SAAKhB,OAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFV,OAAP;;AAKF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,IAAI,EAAEG,MAAM,CAACE,IAFR;AAGLN,QAAAA,MAAM,EAAE;AAHH,OAAP;;AAMF,SAAKN,UAAL;AACE,aAAOC,YAAP;;AAEF;AACE,aAAOQ,KAAP;AArCJ;AAuCD,CAzCD;;AA2CA,OAAO,MAAMM,WAAW,GAAIb,KAAD,KAAY;AAAES,EAAAA,IAAI,EAAEhB,YAAR;AAAsBO,EAAAA;AAAtB,CAAZ,CAApB;AACP,OAAO,MAAMc,cAAc,GAAIb,QAAD,KAAe;AAAEQ,EAAAA,IAAI,EAAEf,eAAR;AAAyBO,EAAAA;AAAzB,CAAf,CAAvB;AACP,OAAO,MAAMc,OAAO,GAAIL,IAAD,KAAW;AAACD,EAAAA,IAAI,EAAEd,QAAP;AAAiBe,EAAAA;AAAjB,CAAX,CAAhB;AACP,OAAO,MAAMM,SAAS,GAAIZ,MAAD,KAAa;AAAEK,EAAAA,IAAI,EAAEb,OAAR;AAAiBQ,EAAAA;AAAjB,CAAb,CAAlB;AACP,OAAO,MAAMa,OAAO,GAAIP,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEZ,QAAR;AAAkBa,EAAAA;AAAlB,CAAX,CAAhB;AACP,OAAO,MAAMQ,SAAS,GAAG,OAAO;AAAET,EAAAA,IAAI,EAAEX;AAAR,CAAP,CAAlB;AAEP,eAAeQ,YAAf","sourcesContent":["const CHANGE_LOGIN = 'CHANGE_LOGIN';\r\nconst CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nconst SET_AUTH = 'SET_AUTH';\r\nconst IS_AUTH = 'IS_AUTH';\r\nconst SET_USER = 'SET_USER';\r\nconst SET_LOGOUT = 'SET_LOGOUT';\r\n\r\nlet initialState = {\r\n  login: '',\r\n  password: '',\r\n  token: '',\r\n  refreshToken: '',\r\n  isAuth: false,\r\n  user: null\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case CHANGE_LOGIN:\r\n      return {\r\n        ...state,\r\n        login: action.login,\r\n      }\r\n\r\n    case CHANGE_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password,\r\n      }\r\n\r\n    case SET_AUTH:\r\n      return {\r\n        ...state,\r\n        token: action.data.access_token,\r\n        refreshToken: action.data.refresh_token,\r\n      }\r\n\r\n    case IS_AUTH:\r\n      return {\r\n        ...state,\r\n        isAuth: action.isAuth\r\n      }\r\n\r\n    case SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.data,\r\n        isAuth: true\r\n      }\r\n\r\n    case SET_LOGOUT:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const changeLogin = (login) => ({ type: CHANGE_LOGIN, login });\r\nexport const changePassword = (password) => ({ type: CHANGE_PASSWORD, password });\r\nexport const setAuth = (data) => ({type: SET_AUTH, data});\r\nexport const setIsAuth = (isAuth) => ({ type: IS_AUTH, isAuth })\r\nexport const setUser = (data) => ({ type: SET_USER, data })\r\nexport const setLogout = () => ({ type: SET_LOGOUT });\r\n\r\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}