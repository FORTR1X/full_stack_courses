{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useLocalStorage = (initialState, key) => {\n  _s();\n\n  const getItem = () => {\n    const item = localStorage.getItem(key);\n    if (item) return item;\n    return initialState;\n  };\n\n  const [storedItem, setStoredItem] = useState(getItem());\n\n  const setItem = value => {\n    localStorage.setItem(key, value);\n    setStoredItem(value);\n    debugger;\n  };\n\n  const removeItem = () => localStorage.removeItem(key);\n\n  return [storedItem, setItem, removeItem];\n};\n\n_s(useLocalStorage, \"zIeAG2ZUYmjDJJ1XqnmM9US155w=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","useLocalStorage","initialState","key","getItem","item","localStorage","storedItem","setStoredItem","setItem","value","removeItem"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAEA,MAAMC,eAAe,GAAG,CAACC,YAAD,EAAeC,GAAf,KAAuB;AAAA;;AAE7C,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAGC,YAAY,CAACF,OAAb,CAAqBD,GAArB,CAAb;AAEA,QAAIE,IAAJ,EACE,OAAOA,IAAP;AAEF,WAAOH,YAAP;AACD,GAPD;;AASA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACI,OAAO,EAAR,CAA5C;;AAEA,QAAMK,OAAO,GAAIC,KAAD,IAAW;AACzBJ,IAAAA,YAAY,CAACG,OAAb,CAAqBN,GAArB,EAA0BO,KAA1B;AACAF,IAAAA,aAAa,CAACE,KAAD,CAAb;AACA;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAG,MACjBL,YAAY,CAACK,UAAb,CAAwBR,GAAxB,CADF;;AAGA,SAAO,CAACI,UAAD,EAAaE,OAAb,EAAsBE,UAAtB,CAAP;AACD,CAvBD;;GAAMV,e;;AAyBN,eAAeA,eAAf","sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nconst useLocalStorage = (initialState, key) => {\r\n\r\n  const getItem = () => {\r\n    const item = localStorage.getItem(key);\r\n\r\n    if (item)\r\n      return item;\r\n\r\n    return initialState;\r\n  };\r\n\r\n  const [storedItem, setStoredItem] = useState(getItem());\r\n\r\n  const setItem = (value) => {\r\n    localStorage.setItem(key, value);\r\n    setStoredItem(value);\r\n    debugger;\r\n  }\r\n\r\n  const removeItem = () =>\r\n    localStorage.removeItem(key);\r\n\r\n  return [storedItem, setItem, removeItem];\r\n}\r\n\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}