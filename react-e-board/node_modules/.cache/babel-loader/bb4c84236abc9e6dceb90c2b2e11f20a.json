{"ast":null,"code":"import axios from \"axios\";\nconst CHANGE_RESET_PASSWORD = 'CHANGE_RESET_PASSWORD';\nconst CHANGE_RESET_CONFIRM_PASSWORD = 'CHANGE_RESET_CONFIRM_PASSWORD';\nconst SET_RESET_STATUS = 'SET_RESET_STATUS';\nconst SET_RESET_ERROR = 'SET_RESET_ERROR';\nlet initialState = {\n  password: '',\n  confirmPassword: '',\n  status: null,\n  error: null\n};\n\nconst resetPasswordReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_RESET_PASSWORD:\n      return { ...state,\n        password: action.password\n      };\n\n    case CHANGE_RESET_CONFIRM_PASSWORD:\n      return { ...state,\n        confirmPassword: action.confirmPassword\n      };\n\n    case SET_RESET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    case SET_RESET_ERROR:\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const changePasswordField = password => ({\n  type: CHANGE_RESET_PASSWORD,\n  password\n});\nexport const changeConfirmPasswordField = confirmPassword => ({\n  type: CHANGE_RESET_CONFIRM_PASSWORD,\n  confirmPassword\n});\n\nconst setResetStatus = status => ({\n  type: SET_RESET_STATUS,\n  status\n});\n\nexport const changeUserPassword = props => {\n  return dispatch => {\n    axios.put(`/forgotPassword/${props.code}`, props.password).then(response => dispatch(setResetStatus(response)));\n  };\n};\nexport default resetPasswordReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/redux/ResetPasswordReducer.js"],"names":["axios","CHANGE_RESET_PASSWORD","CHANGE_RESET_CONFIRM_PASSWORD","SET_RESET_STATUS","SET_RESET_ERROR","initialState","password","confirmPassword","status","error","resetPasswordReducer","state","action","type","changePasswordField","changeConfirmPasswordField","setResetStatus","changeUserPassword","props","dispatch","put","code","then","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,6BAA6B,GAAG,+BAAtC;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,eAAe,EAAE,EAFA;AAGjBC,EAAAA,MAAM,EAAE,IAHS;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAAnB;;AAOA,MAAMC,oBAAoB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKZ,qBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACN;AAFZ,OAAP;;AAKF,SAAKJ,6BAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,eAAe,EAAEK,MAAM,CAACL;AAFnB,OAAP;;AAKF,SAAKJ,gBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,MAAM,EAAEI,MAAM,CAACJ;AAFV,OAAP;;AAKF,SAAKJ,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAFT,OAAP;;AAKF;AACE,aAAOE,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,OAAO,MAAMG,mBAAmB,GAAIR,QAAD,KAAe;AAAEO,EAAAA,IAAI,EAAEZ,qBAAR;AAA+BK,EAAAA;AAA/B,CAAf,CAA5B;AACP,OAAO,MAAMS,0BAA0B,GAAIR,eAAD,KAAsB;AAAEM,EAAAA,IAAI,EAAEX,6BAAR;AAAuCK,EAAAA;AAAvC,CAAtB,CAAnC;;AAEP,MAAMS,cAAc,GAAIR,MAAD,KAAa;AAAEK,EAAAA,IAAI,EAAEV,gBAAR;AAA0BK,EAAAA;AAA1B,CAAb,CAAvB;;AAEA,OAAO,MAAMS,kBAAkB,GAAIC,KAAD,IAAW;AAC3C,SAAQC,QAAD,IAAc;AACnBnB,IAAAA,KAAK,CAACoB,GAAN,CAAW,mBAAkBF,KAAK,CAACG,IAAK,EAAxC,EAA2CH,KAAK,CAACZ,QAAjD,EAA2DgB,IAA3D,CACIC,QAAQ,IAAIJ,QAAQ,CAACH,cAAc,CAACO,QAAD,CAAf,CADxB;AAGD,GAJD;AAKD,CANM;AAQP,eAAeb,oBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst CHANGE_RESET_PASSWORD = 'CHANGE_RESET_PASSWORD';\r\nconst CHANGE_RESET_CONFIRM_PASSWORD = 'CHANGE_RESET_CONFIRM_PASSWORD';\r\nconst SET_RESET_STATUS = 'SET_RESET_STATUS';\r\nconst SET_RESET_ERROR = 'SET_RESET_ERROR';\r\n\r\nlet initialState = {\r\n  password: '',\r\n  confirmPassword: '',\r\n  status: null,\r\n  error: null\r\n}\r\n\r\nconst resetPasswordReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case CHANGE_RESET_PASSWORD:\r\n      return {\r\n        ...state,\r\n        password: action.password\r\n      }\r\n\r\n    case CHANGE_RESET_CONFIRM_PASSWORD:\r\n      return {\r\n        ...state,\r\n        confirmPassword: action.confirmPassword\r\n      }\r\n\r\n    case SET_RESET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n\r\n    case SET_RESET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const changePasswordField = (password) => ({ type: CHANGE_RESET_PASSWORD, password });\r\nexport const changeConfirmPasswordField = (confirmPassword) => ({ type: CHANGE_RESET_CONFIRM_PASSWORD, confirmPassword });\r\n\r\nconst setResetStatus = (status) => ({ type: SET_RESET_STATUS, status });\r\n\r\nexport const changeUserPassword = (props) => {\r\n  return (dispatch) => {\r\n    axios.put(`/forgotPassword/${props.code}`, props.password).then(\r\n        response => dispatch(setResetStatus(response))\r\n    )\r\n  }\r\n}\r\n\r\nexport default resetPasswordReducer;"]},"metadata":{},"sourceType":"module"}