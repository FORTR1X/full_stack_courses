{"ast":null,"code":"import axios from \"axios\";\nconst SET_USER = 'SET_USER';\nconst SET_ADVERTS = 'SET_ADVERTS';\nlet initialState = {\n  user: {},\n  adverts: []\n};\n\nconst myAdvertsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER:\n      getAdverts(action.username);\n      return { ...state,\n        user: action.user\n      };\n\n    case SET_ADVERTS:\n      return { ...state,\n        adverts: action.adverts\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setUser = user => ({\n  type: SET_USER,\n  user\n});\nexport const setAdverts = adverts => ({\n  type: SET_ADVERTS,\n  adverts\n});\nexport const getUser = props => {\n  debugger;\n  return dispatch => {\n    axios.get(`/user/${props.user}`, {\n      headers: {\n        'Authorization': `bearer ${props.token}`\n      }\n    }).then(response => {\n      dispatch(setUser(response.data));\n    });\n  };\n};\nexport const getAdverts = username => {\n  return dispatch => {\n    axios.get(`/ad/user/${username}`).then(response => {\n      dispatch(setAdverts(response.data));\n    });\n  };\n};\nexport default myAdvertsReducer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/redux/MyAdvertsReducer.js"],"names":["axios","SET_USER","SET_ADVERTS","initialState","user","adverts","myAdvertsReducer","state","action","type","getAdverts","username","setUser","setAdverts","getUser","props","dispatch","get","headers","token","then","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAAnB;;AAKA,MAAMC,gBAAgB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,QAAL;AACES,MAAAA,UAAU,CAACF,MAAM,CAACG,QAAR,CAAV;AACA,aAAO,EACL,GAAGJ,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFR,OAAP;;AAKF,SAAKF,WAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAFX,OAAP;;AAIF;AACE,aAAOE,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,OAAO,MAAMK,OAAO,GAAIR,IAAD,KAAW;AAAEK,EAAAA,IAAI,EAAER,QAAR;AAAkBG,EAAAA;AAAlB,CAAX,CAAhB;AACP,OAAO,MAAMS,UAAU,GAAIR,OAAD,KAAc;AAAEI,EAAAA,IAAI,EAAEP,WAAR;AAAqBG,EAAAA;AAArB,CAAd,CAAnB;AAEP,OAAO,MAAMS,OAAO,GAAIC,KAAD,IAAW;AAChC;AACA,SAAQC,QAAD,IAAc;AACnBhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,SAAQF,KAAK,CAACX,IAAK,EAA9B,EAAiC;AAC/Bc,MAAAA,OAAO,EAAE;AACP,yBAAkB,UAASH,KAAK,CAACI,KAAM;AADhC;AADsB,KAAjC,EAIGC,IAJH,CAKIC,QAAQ,IAAI;AACVL,MAAAA,QAAQ,CAACJ,OAAO,CAACS,QAAQ,CAACC,IAAV,CAAR,CAAR;AACD,KAPL;AASD,GAVD;AAWD,CAbM;AAeP,OAAO,MAAMZ,UAAU,GAAIC,QAAD,IAAc;AACtC,SAAQK,QAAD,IAAc;AACnBhB,IAAAA,KAAK,CAACiB,GAAN,CAAW,YAAWN,QAAS,EAA/B,EAAkCS,IAAlC,CACIC,QAAQ,IAAI;AACVL,MAAAA,QAAQ,CAACH,UAAU,CAACQ,QAAQ,CAACC,IAAV,CAAX,CAAR;AACD,KAHL;AAKD,GAND;AAOD,CARM;AAUP,eAAehB,gBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SET_USER = 'SET_USER';\r\nconst SET_ADVERTS = 'SET_ADVERTS';\r\n\r\nlet initialState = {\r\n  user: {},\r\n  adverts: []\r\n}\r\n\r\nconst myAdvertsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case SET_USER:\r\n      getAdverts(action.username);\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n\r\n    case SET_ADVERTS:\r\n      return {\r\n        ...state,\r\n        adverts: action.adverts\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setUser = (user) => ({ type: SET_USER, user });\r\nexport const setAdverts = (adverts) => ({ type: SET_ADVERTS, adverts });\r\n\r\nexport const getUser = (props) => {\r\n  debugger;\r\n  return (dispatch) => {\r\n    axios.get(`/user/${props.user}`, {\r\n      headers: {\r\n        'Authorization': `bearer ${props.token}`\r\n      }\r\n    }).then(\r\n        response => {\r\n          dispatch(setUser(response.data));\r\n        }\r\n    )\r\n  }\r\n}\r\n\r\nexport const getAdverts = (username) => {\r\n  return (dispatch) => {\r\n    axios.get(`/ad/user/${username}`).then(\r\n        response => {\r\n          dispatch(setAdverts(response.data));\r\n        }\r\n    )\r\n  }\r\n}\r\n\r\nexport default myAdvertsReducer;"]},"metadata":{},"sourceType":"module"}