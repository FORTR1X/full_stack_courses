{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FORTRIX\\\\Desktop\\\\react_project\\\\src\\\\Adverts\\\\Adverts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport s from './Adverts.module.css';\nimport Advert from \"./Advert/Advert\";\nimport { useLocation } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Adverts = props => {\n  _s();\n\n  /*  let advertsList = props.listAd.map(el => <Advert imgPath={el.imgPath} adName={el.header} price={el.price} description={el.desc} datePublish={el.datePublish}\r\n      adId={el.adId} />);*/\n  const location = useLocation().pathname;\n  let adverts = [];\n  let hasMore = props.hasMore;\n  const [page, setPage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadMore = () => {\n    if (isLoading === false) setIsLoading(true);\n  };\n\n  useEffect(() => {\n    setPage(page + 1);\n\n    switch (location) {\n      case '/':\n        props.getNewAds(page);\n        adverts = props.newAds;\n        break;\n\n      case '/nedvijimost':\n        props.getImmovables(page);\n        adverts = props.immovables;\n        break;\n\n      case '/transport':\n        props.getTransport(page);\n        adverts = props.transport;\n        break;\n\n      default:\n        return;\n    }\n\n    setIsLoading(false);\n  }, [isLoading, props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.headerName,\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: s.h4,\n        children: \"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.adverts,\n      children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        pageStart: 0,\n        loadMore: loadMore,\n        hasMore: hasMore,\n        loader: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.loader,\n          children: \"Loading ...\"\n        }, 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Adverts, \"2b83/ervoPe8E0euxzdx9BNhhUQ=\", false, function () {\n  return [useLocation];\n});\n\n_c = Adverts;\nexport default Adverts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Adverts\");","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/Adverts/Adverts.js"],"names":["React","useEffect","useState","s","Advert","useLocation","InfiniteScroll","Adverts","props","location","pathname","adverts","hasMore","page","setPage","isLoading","setIsLoading","loadMore","getNewAds","newAds","getImmovables","immovables","getTransport","transport","content","headerName","h4","loader"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAE3B;AACA;AAEE,QAAMC,QAAQ,GAAGJ,WAAW,GAAGK,QAA/B;AAEA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAGJ,KAAK,CAACI,OAApB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMe,QAAQ,GAAG,MAAM;AACrB,QAAIF,SAAS,KAAK,KAAlB,EACEC,YAAY,CAAC,IAAD,CAAZ;AAEH,GAJD;;AAMAf,EAAAA,SAAS,CAAE,MAAM;AACfa,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;;AAEA,YAAQJ,QAAR;AACE,WAAK,GAAL;AACED,QAAAA,KAAK,CAACU,SAAN,CAAgBL,IAAhB;AACAF,QAAAA,OAAO,GAAGH,KAAK,CAACW,MAAhB;AACA;;AAEF,WAAK,cAAL;AACEX,QAAAA,KAAK,CAACY,aAAN,CAAoBP,IAApB;AACAF,QAAAA,OAAO,GAAGH,KAAK,CAACa,UAAhB;AACA;;AAEF,WAAK,YAAL;AACEb,QAAAA,KAAK,CAACc,YAAN,CAAmBT,IAAnB;AACAF,QAAAA,OAAO,GAAGH,KAAK,CAACe,SAAhB;AACA;;AAEF;AACE;AAjBJ;;AAoBAP,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,GAzBQ,EAyBN,CAACD,SAAD,EAAYP,KAAZ,CAzBM,CAAT;AA2BA,sBACI;AAAK,IAAA,SAAS,EAAEL,CAAC,CAACqB,OAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAErB,CAAC,CAACsB,UAAlB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAEtB,CAAC,CAACuB,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEvB,CAAC,CAACQ,OAAlB;AAAA,6BACE,QAAC,cAAD;AACI,QAAA,SAAS,EAAE,CADf;AAEI,QAAA,QAAQ,EAAEM,QAFd;AAGI,QAAA,OAAO,EAAEL,OAHb;AAII,QAAA,MAAM,eAAE;AAAK,UAAA,SAAS,EAAET,CAAC,CAACwB,MAAlB;AAAA;AAAA,WAA+B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBD,CA/DD;;GAAMpB,O;UAKaF,W;;;KALbE,O;AAiEN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport s from './Adverts.module.css';\r\nimport Advert from \"./Advert/Advert\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\n\r\nconst Adverts = (props) => {\r\n\r\n/*  let advertsList = props.listAd.map(el => <Advert imgPath={el.imgPath} adName={el.header} price={el.price} description={el.desc} datePublish={el.datePublish}\r\n    adId={el.adId} />);*/\r\n\r\n  const location = useLocation().pathname;\r\n\r\n  let adverts = [];\r\n  let hasMore = props.hasMore;\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const loadMore = () => {\r\n    if (isLoading === false)\r\n      setIsLoading(true);\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setPage(page + 1);\r\n\r\n    switch (location) {\r\n      case '/':\r\n        props.getNewAds(page);\r\n        adverts = props.newAds;\r\n        break;\r\n\r\n      case '/nedvijimost':\r\n        props.getImmovables(page);\r\n        adverts = props.immovables;\r\n        break;\r\n\r\n      case '/transport':\r\n        props.getTransport(page);\r\n        adverts = props.transport;\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    setIsLoading(false);\r\n\r\n  }, [isLoading, props]);\r\n\r\n  return (\r\n      <div className={s.content}>\r\n        <div className={s.headerName}>\r\n          <h4 className={s.h4}>Категория</h4>\r\n        </div>\r\n        <div className={s.adverts}>\r\n          <InfiniteScroll\r\n              pageStart={0}\r\n              loadMore={loadMore}\r\n              hasMore={hasMore}\r\n              loader={<div className={s.loader} key={0}>Loading ...</div>}>\r\n              {/*{advertsList}*/}\r\n          </InfiniteScroll>\r\n        </div>\r\n\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Adverts;"]},"metadata":{},"sourceType":"module"}