{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FORTRIX\\\\Desktop\\\\react_project\\\\src\\\\Data\\\\Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Data = props => {\n  _s();\n\n  const location = useLocation().pathname;\n  useEffect(() => {\n    if (!props.isContentLoaded) {\n      props.getCategories();\n      props.getSubcategories();\n    }\n\n    if (props.isContentLoaded) {\n      props.getCurrentCategory(location);\n    }\n  }, [props.isContentLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Data, \"ojWRI7mIcH3yyR7IUI2M4vNi0s8=\", false, function () {\n  return [useLocation];\n});\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/Data/Data.js"],"names":["React","useEffect","useLocation","Data","props","location","pathname","isContentLoaded","getCategories","getSubcategories","getCurrentCategory"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAMC,QAAQ,GAAGH,WAAW,GAAGI,QAA/B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,KAAK,CAACG,eAAX,EAA4B;AAC1BH,MAAAA,KAAK,CAACI,aAAN;AACAJ,MAAAA,KAAK,CAACK,gBAAN;AACD;;AAED,QAAIL,KAAK,CAACG,eAAV,EAA2B;AACzBH,MAAAA,KAAK,CAACM,kBAAN,CAAyBL,QAAzB;AACD;AACF,GATQ,EASN,CAACD,KAAK,CAACG,eAAP,CATM,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CAlBD;;GAAMJ,I;UAEaD,W;;;KAFbC,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\n\r\nconst Data = (props) => {\r\n\r\n  const location = useLocation().pathname;\r\n\r\n  useEffect(() => {\r\n    if (!props.isContentLoaded) {\r\n      props.getCategories();\r\n      props.getSubcategories();\r\n    }\r\n\r\n    if (props.isContentLoaded) {\r\n      props.getCurrentCategory(location);\r\n    }\r\n  }, [props.isContentLoaded]);\r\n\r\n  return (\r\n      <div/>\r\n  );\r\n};\r\n\r\nexport default Data;"]},"metadata":{},"sourceType":"module"}