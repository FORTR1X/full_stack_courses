{"ast":null,"code":"import { connect } from \"react-redux\";\nimport OAuth from \"./OAuth\";\nimport { getOAuthData } from \"../../../store/Reducers/OAuthReducer\";\nimport { checkIsAuth } from \"../../../store/Actions/LoginActions\";\nimport { getOAuthUser } from \"../../../store/Actions/OAuthActions\";\n\nconst mapStateToProps = state => {\n  return {\n    user: state.OAuth.user,\n    accessToken: state.OAuth.accessToken,\n    expiresIn: state.OAuth.expiresIn,\n    userId: state.OAuth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst OAuthContainer = connect(mapStateToProps, {\n  getOAuthData,\n  getOAuthUser,\n  checkIsAuth\n})(OAuth);\nexport default OAuthContainer;","map":{"version":3,"sources":["C:/Users/FORTRIX/Desktop/react_project/src/components/Authentication/OAuth/OAuthContainer.js"],"names":["connect","OAuth","getOAuthData","checkIsAuth","getOAuthUser","mapStateToProps","state","user","accessToken","expiresIn","userId","isAuth","auth","OAuthContainer"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,YAAR,QAA2B,sCAA3B;AACA,SAAQC,WAAR,QAA0B,qCAA1B;AACA,SAAQC,YAAR,QAA2B,qCAA3B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACL,KAAN,CAAYM,IADb;AAGLC,IAAAA,WAAW,EAAEF,KAAK,CAACL,KAAN,CAAYO,WAHpB;AAILC,IAAAA,SAAS,EAAEH,KAAK,CAACL,KAAN,CAAYQ,SAJlB;AAKLC,IAAAA,MAAM,EAAEJ,KAAK,CAACL,KAAN,CAAYS,MALf;AAOLC,IAAAA,MAAM,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAPd,GAAP;AASD,CAVD;;AAYA,MAAME,cAAc,GAAGb,OAAO,CAACK,eAAD,EAAkB;AAC9CH,EAAAA,YAD8C;AAChCE,EAAAA,YADgC;AAClBD,EAAAA;AADkB,CAAlB,CAAP,CAEpBF,KAFoB,CAAvB;AAIA,eAAeY,cAAf","sourcesContent":["import {connect} from \"react-redux\";\r\nimport OAuth from \"./OAuth\";\r\nimport {getOAuthData} from \"../../../store/Reducers/OAuthReducer\";\r\nimport {checkIsAuth} from \"../../../store/Actions/LoginActions\";\r\nimport {getOAuthUser} from \"../../../store/Actions/OAuthActions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.OAuth.user,\r\n\r\n    accessToken: state.OAuth.accessToken,\r\n    expiresIn: state.OAuth.expiresIn,\r\n    userId: state.OAuth.userId,\r\n\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\nconst OAuthContainer = connect(mapStateToProps, {\r\n  getOAuthData, getOAuthUser, checkIsAuth\r\n})(OAuth);\r\n\r\nexport default OAuthContainer;"]},"metadata":{},"sourceType":"module"}